<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="errorWrongCardName" xml:space="preserve">
    <value>カードの名前は空にすることはできません！</value>
  </data>
  <data name="errorWrongCardQuality" xml:space="preserve">
    <value>間違ったカードの質</value>
  </data>
  <data name="errorWrongCardSet" xml:space="preserve">
    <value>間違ったカードセット</value>
  </data>
  <data name="errorWrongCardType" xml:space="preserve">
    <value>間違ったカードファミリー</value>
  </data>
  <data name="errorWrongHeroClass" xml:space="preserve">
    <value>間違ったクラスの英雄</value>
  </data>
  <data name="errorWrongMinionRace" xml:space="preserve">
    <value>間違った手先のレース</value>
  </data>
  <data name="errorWrongPathCurve" xml:space="preserve">
    <value>間違ったPathCurveが見つかりました！</value>
  </data>
  <data name="strAttack" xml:space="preserve">
    <value>攻撃</value>
  </data>
  <data name="strBasic" xml:space="preserve">
    <value>基本</value>
  </data>
  <data name="strBeast" xml:space="preserve">
    <value>獣</value>
  </data>
  <data name="strBRM" xml:space="preserve">
    <value>ブラックロック・マウンテン</value>
  </data>
  <data name="strCancelProcess" xml:space="preserve">
    <value>プロセスをキャンセル</value>
  </data>
  <data name="strChooseDestination" xml:space="preserve">
    <value>出力フォルダー</value>
  </data>
  <data name="strClass" xml:space="preserve">
    <value>ヒーロー</value>
  </data>
  <data name="strClassic" xml:space="preserve">
    <value>クラシック</value>
  </data>
  <data name="strCollectionSuccess" xml:space="preserve">
    <value>カード作成に成功コレクション</value>
  </data>
  <data name="strCommon" xml:space="preserve">
    <value>共通</value>
  </data>
  <data name="strCost" xml:space="preserve">
    <value>コスト</value>
  </data>
  <data name="strCreateCards" xml:space="preserve">
    <value>カードを作成します。</value>
  </data>
  <data name="strCreateCollection" xml:space="preserve">
    <value>コレクションを作成</value>
  </data>
  <data name="strCreateCustom" xml:space="preserve">
    <value>カードをカスタマイズ</value>
  </data>
  <data name="strCustom" xml:space="preserve">
    <value>その他：</value>
  </data>
  <data name="strDamage" xml:space="preserve">
    <value>ダメージ</value>
  </data>
  <data name="strDemon" xml:space="preserve">
    <value>悪魔</value>
  </data>
  <data name="strDragon" xml:space="preserve">
    <value>ドラゴン</value>
  </data>
  <data name="strDruid" xml:space="preserve">
    <value>ドルイド</value>
  </data>
  <data name="strDurability" xml:space="preserve">
    <value>耐久性</value>
  </data>
  <data name="strEpic" xml:space="preserve">
    <value>エピック</value>
  </data>
  <data name="strFree" xml:space="preserve">
    <value>フリー</value>
  </data>
  <data name="strGvG" xml:space="preserve">
    <value>ゴブリンvsノーム</value>
  </data>
  <data name="strHealth" xml:space="preserve">
    <value>健康状態</value>
  </data>
  <data name="strHunter" xml:space="preserve">
    <value>ハンター</value>
  </data>
  <data name="strImageFolder" xml:space="preserve">
    <value>画像フォルダー</value>
  </data>
  <data name="strLegendary" xml:space="preserve">
    <value>伝説</value>
  </data>
  <data name="strMage" xml:space="preserve">
    <value>メイジ</value>
  </data>
  <data name="strMech" xml:space="preserve">
    <value>メカ</value>
  </data>
  <data name="strMinion" xml:space="preserve">
    <value>手先</value>
  </data>
  <data name="strMurloc" xml:space="preserve">
    <value>マーロック</value>
  </data>
  <data name="strName" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="strNax" xml:space="preserve">
    <value>ナクスラーマスの呪い</value>
  </data>
  <data name="strNeutral" xml:space="preserve">
    <value>中立</value>
  </data>
  <data name="strNone" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="strOpenJSONFile" xml:space="preserve">
    <value>JSONファイル</value>
  </data>
  <data name="strOutputSize" xml:space="preserve">
    <value>サイズ：</value>
  </data>
  <data name="strPaladin" xml:space="preserve">
    <value>パラディン</value>
  </data>
  <data name="strPirate" xml:space="preserve">
    <value>海賊</value>
  </data>
  <data name="strPriest" xml:space="preserve">
    <value>プリースト</value>
  </data>
  <data name="strProcessingLocale" xml:space="preserve">
    <value>作成言語</value>
  </data>
  <data name="strQuality" xml:space="preserve">
    <value>質の高いです</value>
  </data>
  <data name="strRace" xml:space="preserve">
    <value>ミニオンレース</value>
  </data>
  <data name="strRare" xml:space="preserve">
    <value>レア</value>
  </data>
  <data name="strRogue" xml:space="preserve">
    <value>ローグ</value>
  </data>
  <data name="strSaveCard" xml:space="preserve">
    <value>カードを保存</value>
  </data>
  <data name="strSelectImage" xml:space="preserve">
    <value>画像を選択</value>
  </data>
  <data name="strSet" xml:space="preserve">
    <value>セット</value>
  </data>
  <data name="strShaman" xml:space="preserve">
    <value>シャーマン</value>
  </data>
  <data name="strSpell" xml:space="preserve">
    <value>綴る</value>
  </data>
  <data name="strText" xml:space="preserve">
    <value>テキスト（HTMLタグ可）</value>
  </data>
  <data name="strTGT" xml:space="preserve">
    <value>グランド・トーナメント</value>
  </data>
  <data name="strTotem" xml:space="preserve">
    <value>トーテム</value>
  </data>
  <data name="strType" xml:space="preserve">
    <value>カードタイプ</value>
  </data>
  <data name="strUnknownError" xml:space="preserve">
    <value>何かが間違って</value>
  </data>
  <data name="strUpdateCard" xml:space="preserve">
    <value>カードを作成します。</value>
  </data>
  <data name="strUserCancel" xml:space="preserve">
    <value>ユーザーによってキャンセル</value>
  </data>
  <data name="strWarlock" xml:space="preserve">
    <value>ウォーロック</value>
  </data>
  <data name="strWarrior" xml:space="preserve">
    <value>ウォリアー</value>
  </data>
  <data name="strWeapon" xml:space="preserve">
    <value>武器</value>
  </data>
  <data name="strTranslation" xml:space="preserve">
    <value>Hugo Castro</value>
  </data>
  <data name="strJSONParseSuccess" xml:space="preserve">
    <value>JSONファイルが正常に処理</value>
  </data>
  <data name="strJSONProcess" xml:space="preserve">
    <value>処理ファイル。 、しばらくお待ちください...</value>
  </data>
  <data name="strDefaultPicture" xml:space="preserve">
    <value>デフォルトのイメージを使用しますか？</value>
  </data>
  <data name="strNoImage" xml:space="preserve">
    <value>画像が見つからない場合：</value>
  </data>
  <data name="strNoImageOptions" xml:space="preserve">
    <value>カードを生成しません - デフォルトのイメージを使用する - 空のスペースを残します</value>
  </data>
  <data name="strStatus" xml:space="preserve">
    <value>{0}  {1}  言語を搭載したカード</value>
  </data>
  <data name="strLOE" xml:space="preserve">
    <value>リーグ・オブ・エクスプローラー</value>
  </data>
  <data name="strWOG" xml:space="preserve">
    <value>旧神のささやき</value>
  </data>
</root>